version: "3.9"

services:
  api:
    build:
        context: .
        dockerfile: ./docker/dev/django/Dockerfile
    command: /start
    container_name: django-api
    volumes:
        - .:/app
        - static_volume:/app/staticfiles
        - media_volume:/app/mediafiles
    ports:
        - "8000:8000"
    env_file:
        - ./.envs/.dev/.django
        - ./.envs/.dev/.postgres
    depends_on:
        - postgres
        - mailhog
        # - redis
    networks:
        - django-prod

  postgres:
      build:
          context: .
          dockerfile: ./docker/dev/postgres/Dockerfile
      container_name: postgres
      volumes:
          - local_postgres_data:/var/lib/postgresql/data
          - local_postgres_data_backups:/backups
      env_file:
          - ./.envs/.dev/.postgres
      networks:
          - django-prod

  mailhog:
      image: mailhog/mailhog:v1.0.0
      container_name: mailhog
      ports:
          - "8025:8025"
      networks:
          - django-prod

#   redis:
#       image: redis:6-alpine
#       container_name: redis
#       networks:
#           - django-prod

#   celery_worker:
#       build:
#           context: .
#           dockerfile: ./docker/dev/django/Dockerfile
#       command: /start-celeryworker
#       container_name: celery_worker
#       volumes:
#           - .:/app
#       env_file:
#           - ./.envs/.dev/.django
#           - ./.envs/.dev/.postgres
#       depends_on:
#           - redis
#           - postgres
#           - mailhog
#       networks:
#           - django-prod

#   flower:
#       build:
#           context: .
#           dockerfile: ./docker/dev/django/Dockerfile
#       command: /start-flower
#       container_name: flower
#       volumes:
#           - .:/app
#       env_file:
#           - ./.envs/.dev/.django
#           - ./.envs/.dev/.postgres
#       ports:
#           - "5555:5555"
#       depends_on:
#           - redis
#           - postgres
#       networks:
#           - django-prod

#   nginx:
#       restart: always
#       depends_on:
#           - api
#       volumes:
#           - static_volume:/app/staticfiles
#           - media_volume:/app/mediafiles
#       build:
#           context: ./docker/dev/nginx
#           dockerfile: Dockerfile
#       ports:
#           - "8080:80"
#       networks:
#           - django-prod

networks:
    django-prod:
        driver: bridge

volumes:
    local_postgres_data: {}
    local_postgres_data_backups: {}
    static_volume:
    media_volume:
